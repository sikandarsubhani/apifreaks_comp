{"version":3,"sources":["../src/library/components/common/DropDownMenu.tsx","../src/library/components/navigation/MobileNavigationGlobal.tsx","../src/library/components/navigation/site-search/SearchBar.tsx","../src/library/hooks/hook.ts","../src/library/components/dark-mode/ThemeProvider.tsx","../src/library/components/dark-mode/DarkModeToggle.tsx"],"sourcesContent":["'use client';\n\nimport { ChevronRightIcon } from '../../icons/Icons';\nimport clsx from 'clsx';\nimport Link from 'next/link';\nimport { useState } from 'react';\n\ntype DropdownMenuProps = {\n  title: string;\n  items: Array<{ title: string; link: string }>;\n  className?: string;\n  page: string;\n  linkPrefetch?: boolean;\n};\n\nfunction DropdownMenu({\n  title,\n  items,\n  className,\n  page,\n  linkPrefetch = true,\n}: DropdownMenuProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleDropdownOpen = () => setIsOpen(true);\n  const toggleDropdownClose = () => setIsOpen(false);\n\n  return (\n    <div className='relative'>\n      <div\n        onMouseEnter={toggleDropdownOpen}\n        onMouseLeave={toggleDropdownClose}\n        className='cursor-pointer'\n      >\n        <div className='font-bold'>\n          <Link\n            href={page}\n            className='flex items-center'\n            prefetch={linkPrefetch}\n          >\n            <p>{title}</p>\n          </Link>\n        </div>\n      </div>\n      {isOpen && (\n        <div\n          onMouseEnter={toggleDropdownOpen}\n          onMouseLeave={toggleDropdownClose}\n          className='absolute w-48 h-20 z-50'\n        >\n          <div\n            className={clsx(\n              'mt-8 w-[45rem] bg-white dark:text-soft-white dark:bg-primary-dark shadow-xl rounded-lg overflow-hidden border border-gray-100 transform transition-all duration-300 ease-in-out dark:border-none',\n              className\n            )}\n          >\n            <div className='p-4'>\n              <h3 className='text-lg font-semibold text-gray-800 mb-3 dark:text-soft-white'>\n                {title}\n              </h3>\n              <div className='grid grid-cols-3 gap-3'>\n                {items.map(item => (\n                  <div key={item.title} className='group relative'>\n                    <Link\n                      href={item.link}\n                      className='block p-3 rounded-lg transition-all duration-200 ease-in-out\n                        bg-gray-100 dark:bg-black hover:bg-gray-50 dark:hover:bg-primary-dark-hover hover:shadow-md\n                        transform hover:-translate-y-1'\n                      prefetch={linkPrefetch}\n                    >\n                      <div className='flex flex-col space-y-2'>\n                        <span className='text-sm font-medium text-primary-dark group-hover:text-primary-dark-hover dark:text-soft-white'>\n                          {item.title}\n                        </span>\n                        <span className='text-xs text-gray-500 group-hover:text-gray-400'>\n                          {`Explore ${title}`} â†’\n                        </span>\n                      </div>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className='bg-gray-50 px-4 py-3 border-t border-gray-100 dark:bg-dark-gray  dark:border-none'>\n              <Link\n                href={page}\n                className='text-sm text-primary-dark hover:text-primary-dark-hover font-medium flex items-center dark:text-soft-white'\n                prefetch={linkPrefetch}\n              >\n                View all {title} <ChevronRightIcon />\n              </Link>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DropdownMenu;\n","'use client';\n\nimport { HamburgerIcon, MobileNavigationCloseIcon } from '../../icons/Icons';\nimport { PAGE } from '../../utils/constants';\nimport { navigationLinksPublic } from '../../utils/navigation-links';\nimport { pageUrl } from '../../utils/utils';\nimport clsx from 'clsx';\nimport Link from 'next/link';\nimport { useState } from 'react';\n\nfunction MobileNavigation() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState<boolean>(false);\n\n  return (\n    <div className='ml-auto lg:hidden w-full'>\n      <div className='flex-cb'>\n        <div className='flex items-center gap-2'>\n          <button\n            onClick={() => setIsMobileMenuOpen(prev => !prev)}\n            className='block text-primary-dark hover:text-gray-500 cursor-pointer'\n          >\n            {isMobileMenuOpen ? (\n              <MobileNavigationCloseIcon />\n            ) : (\n              <HamburgerIcon />\n            )}\n          </button>\n        </div>\n      </div>\n      {isMobileMenuOpen && (\n        <nav\n          className={clsx(\n            'absolute bg-primary top-[100%] left-0 z-20 px-2 w-full border-y border-primary-dark py-10 space-y-12 text-base'\n          )}\n        >\n          <div>\n            <ul className='bg-primary text-primay-dark space-y-6 text-center'>\n              {navigationLinksPublic.map(item => (\n                <li key={item.label}>\n                  <Link href={item.href} className={clsx('font-bold')}>\n                    {item.label}\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className='flex-cc flex-col gap-5 font-bold'>\n            <Link className='hover:text-black' href={pageUrl(PAGE.Login)}>\n              Sign In\n            </Link>\n            <Link\n              href={pageUrl(PAGE.Signup)}\n              className='bg-primary-dark text-white rounded-full py-3 px-4 hover:bg-primary-dark-hover'\n            >\n              Sign Up\n            </Link>\n          </div>\n        </nav>\n      )}\n    </div>\n  );\n}\n\nexport default MobileNavigation;\n","'use client';\n\nimport { PAGE } from '../../../utils/constants';\nimport Fuse, { FuseResult, FuseResultMatch } from 'fuse.js';\nimport Link from 'next/link';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { SearchBarPage } from '../../../types/types';\nimport { navigationLinksPublic } from '../../../utils/navigation-links';\nimport { pageUrl, stopClickPropagation } from '../../../utils/utils';\nimport DarkModeToggle from '../../dark-mode/DarkModeToggle';\nimport { CrossIcon, SearchIcon } from '../../../icons/Icons';\n\nconst options = {\n  keys: [\n    { name: 'title', weight: 0.6 },\n    { name: 'content', weight: 0.4 },\n    { name: 'category', weight: 0.3 },\n    { name: 'tags', weight: 0.2 },\n  ],\n  includeScore: true,\n  includeMatches: true,\n  threshold: 0.3,\n  shouldSort: true,\n  minMatchCharLength: 1,\n  distance: 150,\n  useExtendedSearch: true,\n  ignoreLocation: false,\n};\n\nexport default function SiteSearchBar({\n  searchablePages,\n}: {\n  searchablePages: SearchBarPage[];\n}) {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState<Array<FuseResult<SearchBarPage>>>([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const fuse = useMemo(\n    () => new Fuse(searchablePages, options),\n    [searchablePages]\n  );\n\n  function handleSearch(value: string) {\n    setQuery(value);\n    if (!value) return setResults([]);\n    const fuseResults = fuse.search(value);\n    setResults(fuseResults);\n  }\n\n  function openModal() {\n    setIsModalOpen(true);\n    setTimeout(() => inputRef.current?.focus(), 100);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n    setQuery('');\n    setResults([]);\n  }\n\n  function isSwaggerRelated(path: string): boolean {\n    return path.includes('/swagger') || path.includes('swagger');\n  }\n\n  function handleLinkClick(path: string) {\n    closeModal();\n\n    if (isSwaggerRelated(path)) {\n      window.location.href = path;\n      return false;\n    }\n\n    return true;\n  }\n\n  useEffect(() => {\n    function handleKeyDown(e: KeyboardEvent) {\n      if ((e.metaKey || e.ctrlKey) && e.key.toLowerCase() === 'k') {\n        e.preventDefault();\n        openModal();\n      } else if (e.key === 'Escape') {\n        closeModal();\n      }\n    }\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  return (\n    <>\n      <div className='flex flex-row gap-2'>\n        <DarkModeToggle />{' '}\n        <div\n          className='relative cursor-pointer group transition-all duration-200'\n          onClick={openModal}\n        >\n          {/* Mobile: Search icon only */}\n          <div className='lg:hidden flex items-center justify-center'>\n            <div className='text-primary-dark hover:text-gray-500 cursor-pointer transition-colors'>\n              <SearchIcon width='1.9rem' height='1.9rem' />\n            </div>\n          </div>\n\n          {/* Desktop/Tablet: Full search bar */}\n          <div className='hidden lg:flex items-center relative'>\n            <input\n              type='text'\n              placeholder='Search'\n              readOnly\n              className='dark:text-soft-white dark:bg-off-black pl-4 pr-16 py-2.5 w-20 sm:w-30 lg:w-35 border border-gray-400 rounded-full bg-white backdrop-blur-sm focus:outline-none placeholder-gray-500 hover:bg-white dark:hover:bg-off-black hover:shadow-lg transition-all duration-300 group-hover:border-primary/40'\n            />\n            <div className='absolute right-3 top-1/2 transform -translate-y-1/2 flex items-center gap-2'>\n              <kbd className='px-2 py-1 text-xs font-medium text-gray-500 dark:text-soft-white bg-gray-100 dark:bg-dark-gray border border-gray-200 rounded-md transition-colors dark:border-none dark:bg-dark-gray'>\n                CTRL+K\n              </kbd>\n            </div>\n          </div>\n        </div>\n        {isModalOpen && (\n          <div\n            className='fixed inset-0 z-50 bg-black/70 flex justify-center items-start pt-[10vh] px-4'\n            onClick={closeModal}\n          >\n            <div\n              className='w-full max-w-3xl max-h-[80vh] overflow-hidden bg-white dark:text-soft-white dark:bg-black rounded-2xl shadow-2xl relative p-6 border border-gray-200'\n              onClick={stopClickPropagation}\n            >\n              {/* Close Button */}\n              <button\n                onClick={closeModal}\n                className='absolute top-4 right-4 text-gray-500 hover:text-gray-800 hover:bg-gray-100 rounded-full p-1 transition cursor-pointer dark:text-soft-white dark:hover:bg-off-black'\n              >\n                <CrossIcon width='1.5rem' height='1.5rem' />\n              </button>\n\n              {/* Search Input */}\n              <div className='flex-cb w-full px-4 py-2 mt-10 border border-primary-dark rounded-md focus:outline-none focus:ring-1 focus:ring-primary-dark-hover dark:bg-primary-dark-hover'>\n                <input\n                  ref={inputRef}\n                  type='text'\n                  value={query}\n                  onChange={e => handleSearch(e.target.value)}\n                  placeholder='Search docs, tools, blog...'\n                  className='border-none w-full focus:outline-none placeholder-gray-400 dark:placeholder-soft-white'\n                />\n                <SearchIcon />\n              </div>\n\n              <div className='overflow-y-auto mt-6 pr-1 max-h-[45vh]'>\n                {results.length > 0 ? (\n                  <div className='space-y-2'>\n                    {results.map((result, index) => (\n                      <div key={index} className='border-l-2 border-primary'>\n                        {isSwaggerRelated(result.item.path) ? (\n                          <a\n                            href={result.item.path}\n                            onClick={() => handleLinkClick(result.item.path)}\n                            className='block px-4 py-3 hover:bg-gray-50 rounded-md transition text-base font-medium dark:bg-primary-dark dark:hover:bg-primary-dark-hover dark:text-soft-white'\n                          >\n                            <div className='flex items-center justify-between'>\n                              <div\n                                className='flex-1 text-base'\n                                dangerouslySetInnerHTML={{\n                                  __html: highlightText(\n                                    result.item.title,\n                                    result.matches?.filter(m => m.key === 'title')\n                                  ),\n                                }}\n                              />\n                              <div className='ml-3 flex items-center gap-2'>\n                                {result.item.category && (\n                                  <span className='px-2 py-1 text-sm bg-gray-200 dark:bg-primary dark:hover:bg-primary-hover dark:text-primary-dark text-pretty rounded-full font-normal'>\n                                    {result.item.category}\n                                  </span>\n                                )}\n                              </div>\n                            </div>\n                          </a>\n                        ) : (\n                          <Link\n                            href={result.item.path}\n                            onClick={() => handleLinkClick(result.item.path)}\n                            className='block px-4 py-3 hover:bg-gray-50 dark:hover:bg-primary-dark rounded-md transition text-base font-medium dark:bg-primary-dark dark:hover:bg-primary-dark-hover dark:text-soft-white'\n                          >\n                            <div className='flex items-center justify-between'>\n                              <div\n                                className='flex-1 text-base'\n                                dangerouslySetInnerHTML={{\n                                  __html: highlightText(\n                                    result.item.title,\n                                    result.matches?.filter(m => m.key === 'title')\n                                  ),\n                                }}\n                              />\n                              <div className='ml-3 flex items-center gap-2'>\n                                {result.item.category && (\n                                  <span className='px-2 py-1 text-sm bg-gray-200 dark:bg-primary dark:hover:bg-primary-hover dark:text-primary-dark text-pretty rounded-full font-normal'>\n                                    {result.item.category}\n                                  </span>\n                                )}\n                              </div>\n                            </div>\n                          </Link>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                ) : query ? (\n                  <div className='text-center text-gray-400 text-base mt-8'>\n                    No results found for &ldquo;\n                    <span className='font-medium'>{query}</span>&rdquo;\n                  </div>\n                ) : (\n                  <div className='space-y-6'>\n                    <h3 className='text-sm font-semibold uppercase tracking-wider text-gray-500 mb-2 px-1 dark:text-soft-white'>\n                      Quick Links\n                    </h3>\n                    <ul className='ml-2 border-l-2 border-primary divide-y dark:bg-primary-dark dark:hover:primary-dark-hover dark:text-soft-white'>\n                      {navigationLinksPublic.map((link, index) => (\n                        <li key={index}>\n                          <Link\n                            href={link.href}\n                            onClick={() => handleLinkClick(link.href)}\n                            className='block px-4 py-3 hover:bg-gray-50 dark:hover:bg-primary-dark-hover rounded-md transition text-base font-medium'\n                          >\n                            {link.label}\n                          </Link>\n                        </li>\n                      ))}\n                      <li>\n                        <Link\n                          href={pageUrl(PAGE.Swagger)}\n                          onClick={closeModal}\n                          className='block px-4 py-3 hover:bg-gray-50 dark:hover:bg-primary-dark-hover rounded-md transition text-base font-medium'\n                        >\n                          Swagger Docs\n                        </Link>\n                      </li>\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div >\n    </>\n  );\n}\n\nfunction highlightText(\n  text: string,\n  matches: Array<FuseResultMatch> | undefined\n) {\n  if (!matches || matches.length === 0) return text;\n\n  // Collect all match indices and sort them by start position\n  const allIndices: Array<[number, number]> = [];\n  matches.forEach(match => {\n    match.indices.forEach(([start, end]) => {\n      allIndices.push([start, end]);\n    });\n  });\n\n  // Sort by start position to avoid overlap issues\n  allIndices.sort((a, b) => a[0] - b[0]);\n\n  // Remove overlapping indices\n  const cleanIndices: Array<[number, number]> = [];\n  for (const [start, end] of allIndices) {\n    const lastIndex = cleanIndices[cleanIndices.length - 1];\n    if (!lastIndex || start > lastIndex[1]) {\n      cleanIndices.push([start, end]);\n    } else if (end > lastIndex[1]) {\n      // Extend the last index if current end is greater\n      cleanIndices[cleanIndices.length - 1] = [lastIndex[0], end];\n    }\n  }\n\n  // Build highlighted text from right to left to avoid index shifting\n  let result = text;\n  for (let i = cleanIndices.length - 1; i >= 0; i--) {\n    const [start, end] = cleanIndices[i];\n    const matchedText = text.substring(start, end + 1);\n    result =\n      result.substring(0, start) +\n      `<mark>${matchedText}</mark>` +\n      result.substring(end + 1);\n  }\n\n  return result;\n}","import { useContext } from \"react\";\nimport { THEME, ThemeContextType } from \"../types/types\";\nimport { ThemeContext } from \"../components/dark-mode/ThemeProvider\";\n\nexport function useTheme(): ThemeContextType {\n  const defaultThemeContext: ThemeContextType = {\n    theme: THEME.System,\n    toggleTheme: () => {\n      throw new Error('ThemeProvider is missing: toggleTheme called outside provider');\n    },\n    setTheme: (t: THEME) => {\n      throw new Error(`ThemeProvider is missing: attempted setTheme(${t})`);\n    },\n  };\n  const context = useContext(ThemeContext);\n  return context ?? defaultThemeContext;\n}","'use client';\nimport { THEME, ThemeContextType } from '../../types/types';\nimport { createContext, ReactNode, useCallback, useEffect, useState } from 'react';\n\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nfunction ThemeProvider({ children }: { children: ReactNode }) {\n  const [theme, setThemeState] = useState<THEME>(THEME.System);\n  const [mounted, setMounted] = useState(false);\n  const [systemTheme, setSystemTheme] = useState<THEME>(THEME.Light);\n\n  const getSystemTheme = () =>\n    window.matchMedia('(prefers-color-scheme: dark)').matches ? THEME.Dark : THEME.Light;\n\n  const applyTheme = useCallback((currentTheme: THEME, sysTheme?: THEME) => {\n    let actualTheme: THEME = currentTheme;\n    if (currentTheme === THEME.System) {\n      actualTheme = sysTheme || getSystemTheme();\n    }\n    document.documentElement.classList.remove('light', 'dark', 'theme-ready');\n    document.documentElement.classList.add('theme-ready', actualTheme);\n  }, []);\n\n  useEffect(() => {\n    let initialTheme: THEME = THEME.System;\n    const storedTheme = localStorage.getItem('theme') as THEME | null;\n    if (storedTheme === THEME.Light || storedTheme === THEME.Dark) {\n      initialTheme = storedTheme;\n    } else {\n      initialTheme = THEME.System;\n    }\n    setThemeState(initialTheme);\n    const sys = getSystemTheme();\n    setSystemTheme(sys);\n    applyTheme(initialTheme, sys);\n    try {\n      localStorage.setItem('theme', initialTheme);\n    } catch {\n      // Ignore errors if localStorage is not available\n    }\n    setMounted(true);\n  }, [applyTheme]);\n\n  useEffect(() => {\n    if (!mounted) return;\n    if (theme !== THEME.System) return;\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      const sysTheme = getSystemTheme();\n      setSystemTheme(sysTheme); // force re-render\n      applyTheme(THEME.System, sysTheme);\n    };\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, [theme, applyTheme, mounted]);\n\n  useEffect(() => {\n    if (!mounted) return;\n    if (theme === THEME.System) {\n      // Always compute the latest system theme when switching to System\n      const sys = getSystemTheme();\n      setSystemTheme(sys);\n      applyTheme(THEME.System, sys);\n      try {\n        localStorage.setItem('theme', THEME.System);\n      } catch {\n        // Ignore errors if localStorage is not available\n      }\n    } else {\n      applyTheme(theme);\n      if (theme === THEME.Light || theme === THEME.Dark) {\n        try {\n          localStorage.setItem('theme', theme);\n        } catch {\n          // Ignore errors if localStorage is not available\n        }\n      }\n    }\n  }, [theme, systemTheme, applyTheme, mounted]);\n\n  const toggleTheme = () => {\n    if (theme === THEME.Light) {\n      setThemeState(THEME.Dark);\n    } else {\n      setThemeState(THEME.Light);\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme, setTheme: setThemeState }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport default ThemeProvider;","'use client';\nimport { useTheme } from '../../hooks/hook';\nimport { THEME } from '../../types/types';\nimport clsx from 'clsx';\nimport { useEffect, useRef, useState } from 'react';\nimport { DarkModeIcon, LightModeIcon, SystemIcon } from '../../icons/Icons';\n\nconst themeOptions: { value: THEME; label: string; icon: React.ReactNode }[] = [\n  { value: THEME.Light, label: 'Light', icon: <ResponsiveIcon Icon={LightModeIcon} /> },\n  { value: THEME.Dark, label: 'Dark', icon: <ResponsiveIcon Icon={DarkModeIcon} /> },\n  { value: THEME.System, label: 'System', icon: <ResponsiveIcon Icon={SystemIcon} /> },\n];\n\nfunction DarkModeToggle() {\n  const { theme, setTheme } = useTheme();\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setDropdownOpen(false);\n      }\n    }\n    if (dropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [dropdownOpen]);\n\n  const [effectiveTheme, setEffectiveTheme] = useState<THEME.Light | THEME.Dark>(THEME.Light);\n\n  useEffect(() => {\n    if (theme === THEME.System) {\n      const updateSystemTheme = () => {\n        setEffectiveTheme(getSystemTheme());\n      };\n      updateSystemTheme();\n      let mediaQuery: MediaQueryList | null = null;\n      if (typeof window !== 'undefined') {\n        mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n        mediaQuery.addEventListener('change', updateSystemTheme);\n      }\n      return () => {\n        if (mediaQuery) {\n          mediaQuery.removeEventListener('change', updateSystemTheme);\n        }\n      };\n    } else {\n      setEffectiveTheme(theme as THEME.Light | THEME.Dark);\n    }\n  }, [theme]);\n\n  const isDark = effectiveTheme === THEME.Dark;\n  const mainIcon = isDark ? <ResponsiveIcon Icon={DarkModeIcon} /> : <ResponsiveIcon Icon={LightModeIcon} />;\n\n  return (\n    <div className=\"relative inline-block\" ref={dropdownRef}>\n      <button\n        onClick={() => setDropdownOpen(open => !open)}\n        aria-label={`Current theme: ${theme}. Click to change theme`}\n        className={clsx(\n          'p-1.5 lg:p-3 flex items-center justify-center rounded-full transition-all duration-300 cursor-pointer',\n          isDark\n            ? 'bg-gray-900 text-white hover:bg-gray-600'\n            : 'bg-gray-200 text-gray-800 hover:bg-gray-300'\n        )}\n        type=\"button\"\n      >\n        {mainIcon}\n      </button>\n      {dropdownOpen && (\n        <div\n          className={clsx(\n            'absolute top-full mt-2 right-0 py-2 rounded-lg shadow-lg border z-50 min-w-32',\n            effectiveTheme === THEME.Light\n              ? 'bg-white border-gray-200'\n              : 'bg-primary-dark border-gray-600'\n          )}\n        >\n          {themeOptions.map(option => (\n            <button\n              key={option.value}\n              onClick={() => {\n                setTheme(option.value);\n                setDropdownOpen(false);\n              }}\n              className={clsx(\n                'w-full px-4 py-2 text-left flex items-center gap-3 transition-colors duration-200 cursor-pointer',\n                theme === option.value\n                  ? effectiveTheme === THEME.Light\n                    ? 'bg-blue-50 text-blue-700'\n                    : ' text-blue-200'\n                  : effectiveTheme === THEME.Light\n                    ? 'text-gray-700 hover:bg-gray-100'\n                    : 'text-gray-300 hover:bg-primary-dark-hover'\n              )}\n              type=\"button\"\n            >\n              <span className=\"w-5 h-5 flex-shrink-0\">\n                {option.icon}\n              </span>\n              <span className=\"text-sm\">{option.label}</span>\n              {theme === option.value && (\n                <span className=\"ml-auto w-2 h-2 bg-primary rounded-full\"></span>\n              )}\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction getSystemTheme(): THEME.Light | THEME.Dark {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches\n      ? THEME.Dark\n      : THEME.Light;\n  }\n  return THEME.Light;\n}\n// ts-ignore-next-line\nfunction ResponsiveIcon({ Icon, ...props }: { Icon: React.ComponentType<any>;[key: string]: any }) {\n  const [isSmall, setIsSmall] = useState(false);\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const mq = window.matchMedia('(max-width: 639px)');\n      const handler = (e: MediaQueryListEvent) => setIsSmall(e.matches);\n      setIsSmall(mq.matches);\n      mq.addEventListener('change', handler);\n      return () => mq.removeEventListener('change', handler);\n    }\n  }, []);\n  return <Icon width={isSmall ? '1.2em' : undefined} height={isSmall ? '1.2em' : undefined} {...props} />;\n}\n\nexport default DarkModeToggle;"],"mappings":"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","names":["clsx","Link","useState","jsx","jsxs","Link","useEffect","useRef","useState","useState","jsx","getSystemTheme","clsx","useEffect","useState","jsx","jsxs","useState","useEffect","clsx","jsx","jsxs","useState","useRef","useEffect","Link"]}